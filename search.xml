<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>HashMap学习笔记</title>
    <url>/2020/03/22/HashMapStudy/</url>
    <content><![CDATA[<p>记录个人对Java8中HashMap的部分原理的学习过程。</p>
<a id="more"></a>

<h3 id="modCount属性与fail-fast"><a href="#modCount属性与fail-fast" class="headerlink" title="modCount属性与fail-fast"></a>modCount属性与fail-fast</h3><p>Java8的官方文档在对HashMap的描述中有这么一段话：</p>
<blockquote>
<p>The iterators returned by all of this class’s “collection view methods” are <em>fail-fast</em>: if the map is structurally modified at any time after the iterator is created, in any way except through the iterator’s own <code>remove</code> method, the iterator will throw a ConcurrentModificationException. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future. </p>
</blockquote>
<p>HashMap类中的 int modCount 属性记录了这个HashMap实例在结构上被修改的次数，包括新增、删除、rehash等改变了数据内部结构的修改操作。</p>
<p>HashMap不是线程安全的，所以在使用迭代器或foreach遍历的时候,会将在遍历前先将modCount原有的值赋给迭代器的expectedModCount属性中，然后进行迭代。若在遍历的过程中，还调用了集合的put(), remove()方法，modCount就会因此被改变（每次进行结构修改操作都会 ++modCount）。若expectedModCount和ModCount不相等，就会抛出ConcurrentModificationException()异常。因为expectedModCount和ModCount这两个值不一致，就说明有多个线程在同时操作集合，这种操作是不确定的、有风险的。为了保证数据的正确性，避免不安全的情况发生，一旦返现这两个值不一致，就立即抛出异常。</p>
<h3 id="HashMap初始容量以及每次扩容后的容量都是2的幂次"><a href="#HashMap初始容量以及每次扩容后的容量都是2的幂次" class="headerlink" title="HashMap初始容量以及每次扩容后的容量都是2的幂次"></a>HashMap初始容量以及每次扩容后的容量都是2的幂次</h3><p>首先，源码中是这样计算元素hash值所对应的数组索引的：</p>
<p><code>(n - 1) &amp; hash</code></p>
<p>为了高效的存取数据，需要尽量减少碰撞，也即将数据更平均的分配在数组当中，每个链表的长度能够大致相同。计算hash对应的索引值的方法实际上就是取模，例如数组容量为n，那么就可以用hash % n这样取模的方法来计算对应Index值。但是计算机处理取模运算是相对较慢的，效率不如位运算快。在容量n为 2次幂的情况下时，(n - 1) &amp; hash = hash % n。因为当n为2的整数次幂时，n-1的二进制位数上都为1，取余和位运算的结果相等，这么做能更高效。</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>你好，世界!</title>
    <url>/2020/03/15/my-first-blog/</url>
    <content><![CDATA[<p><img src="https://s1.ax1x.com/2020/03/13/8uFalD.jpg" alt="8uFalD.jpg"></p>
<blockquote>
<p> 弱小和无知不是生存的障碍，傲慢才是。</p>
</blockquote>
<a id="more"></a>

<h3 id="测试博文"><a href="#测试博文" class="headerlink" title="测试博文"></a>测试博文</h3><p>欢迎访问我的博客~</p>
<p>目前本博客采用next v7 作为主题，趟过了老版本的不少坑，如果你也要想搭建博客并使用next作为你的博客主题，一定要使用新版本，新老版本的在github上是不同的仓库</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>测试</tag>
      </tags>
  </entry>
</search>
